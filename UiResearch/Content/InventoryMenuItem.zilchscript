class InventoryMenuItem : ZilchComponent
{
  sends InventoryItemSetup : UiListEvent;
  
  
  [Static]
  var ItemTypeStrings = HashMap[ItemType, String]()
  {
    { ItemType.Consumable, "" },
    { ItemType.Weapon,     "Weapon" },
    { ItemType.Armor,      "Armor" },
    { ItemType.Accessory,  "Accessory" },
  }; 
  
  
  [Dependency]
  var UiWidget : UiWidget;
  
  
  [Property]
  var NamePath = CogPath();
  [Property]
  var QuantityPath = CogPath();
  [Property]
  var TypePath = CogPath();
  
  var NameCog :     Cog { get { return this.NamePath.Cog; }}
  var QuantityCog : Cog { get { return this.QuantityPath.Cog; }}
  var TypeCog :     Cog { get { return this.TypePath.Cog; }}
  
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Owner, Events.InventoryItemSetup, this.OnInventoryItemSetup);
  }
  
  
  function OnInventoryItemSetup(event : UiListEvent)
  {
    Print("hello");
    this.NameCog.UiTextShadow.Text = event.Name;
    this.QuantityCog.UiTextShadow.Text = "`event.Quantity`";
    this.TypePath.UiTextShadow.Text = InventoryMenuItem.ItemTypeStrings[event.Type];
  }
}


class UiListEvent : ZilchEvent
{
  var Name : String;
  var Quantity : Integer;
  var Type : ItemType;
}


enum ItemType
{
  Consumable,
  Weapon,
  Armor,
  Accessory,
}
